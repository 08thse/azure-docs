# Develop locally using the Azure Cosmos DB emulator

A common use case for the emulator is to serve as a development database while you're building your applications. Using the emulator for development can help you learn characteristics of creating and modeling data for a database like Azure Cosmos DB without incurring any service costs. Additionally, using the emulator as part of an automation workflow can ensure that you can run the same suite of integration tests. You can ensure that the same tests run both locally on your development machine and remotely in a continuous integration job.

## Prerequisites

- [.NET 6 or later](https://dotnet.microsoft.com/download), [Node.js LTS](https://nodejs.org/en/download/), or [Python 3.7 or later](https://www.python.org/downloads/)
  - Ensure that all required executables are available in your `PATH`.
- **Windows emulator**
  - 64-bit Windows Server 2016, 2019, Windows 10, or Windows 11.
  - Minimum hardware requirements:
    - 2-GB RAM
    - 10-GB available hard disk space
- **Docker emulator**
  - [Docker Desktop](https://www.docker.com/products/docker-desktop/)

## Install the emulator

There are multiple variations of the emulator and each variation has a relatively frictionless install process.

::: zone pivot="api-nosql"

### [Docker (Linux container)](#tab/docker-linux)

To get started, get the Linux-variant of the container image from the [Microsoft Container Registry (MCR)](https://mcr.microsoft.com).

1. Pull the `mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator` Linux container image from the container registry to the local Docker host.

    ```bash
    docker pull mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
    ```

1. Check to make sure that the emulator image has been pulled to your local Docker host.

    ```bash
    docker images
    ```

### [Docker (Windows container)](#tab/docker-windows)

To get started, get the Windows-variant of the container image from the [Microsoft Container Registry (MCR)](https://mcr.microsoft.com).

1. Pull the `mcr.microsoft.com/cosmosdb/windows/azure-cosmos-emulator` Windows container image from the container registry to the local Docker host.

    ```powershell
    docker pull mcr.microsoft.com/cosmosdb/windows/azure-cosmos-emulator
    ```

1. Check to make sure that the emulator image has been pulled to your local Docker host.

    ```powershell
    docker images
    ```

### [Windows (local)](#tab/windows)

To get started, download and install the latest version of Azure Cosmos DB Emulator on your local computer.

> [!TIP]
> The [emulator release notes](local-emulator-release-notes.md) article lists all the available versions and the feature updates that were made in each release.

1. Download the [Azure Cosmos DB emulator](https://aka.ms/cosmosdb-emulator).

1. Run the installer on your local machine with **administrative privileges**.

1. The emulator automatically installs the appropriate developer certificates and configures firewall rules on your local machine.

---

::: zone-end

::: zone pivot="api-mongodb"

### [Docker (Linux container)](#tab/docker-linux)
