### YamlMime:FAQ

metadata:
  title: Trusted Signing FAQ
  description: Get answers to frequently asked questions for Trusted Signing.
  author: microsoftshawarma
  ms.author: rakiasegev
  ms.service: trusted-signing
  ms.topic: faq
  ms.date: 03/18/2024
title: Trusted Signing FAQ
summary: |
  This page lists common questions and answers related to Trusted Signing. 

sections:
  - name: Get started
    questions:
      - question: What Windows versions does Trusted Signing support?
        answer: | 
          For details about Windows support for Trusted Signing, see [Trusted Signing Program Windows Support](https://support.microsoft.com/topic/kb5022661-windows-support-for-the-azure-code-signing-program-4b505a31-fa1e-4ea6-85dd-6630229e8ef4).
          The service is supported on all currently supported versions of:
    
          - General User Mode Code Integrity (UMCI) support for Trusted Signing.
          - Signed binaries was added in the July 2021 Certificate Trust List (CTL) update delivered by Windows. In standard scenarios, upon first sight of an end-entity cert from a chain on the machine, the system pulls down the root CA cert into the trust root store on a system.  
      - question: How do I grant API access in Microsoft Entra ID to Trusted Signing?
        answer: | 
         Ask your tenant admin to provide you with an approval. For more information about permissions, see these articles:
          - [Overview of consent and permissions](https://learn.microsoft.com/entra/identity/enterprise-apps/user-admin-consent-overview)
          - [Configure the admin consent workflow](https://learn.microsoft.com/entra/identity/enterprise-apps/configure-admin-consent-workflow)
          - [Review permissions granted to applications](https://learn.microsoft.com/entra/identity/enterprise-apps/manage-application-permissions?pivots=portal)
      - question: What if I don't see Microsoft.CodeSigning in my resource provider? 
        answer: | 
          Register the Microsoft.CodeSigning app on the subscription resource provider pane by using the following screenshot as a guide:
          
          :::image type="content" source="media/trusted-signing-resource-provider.png" alt-text="Screenshot of registering Microsoft.CodeSigning resource provider." lightbox="media/trusted-signing-resource-provider.png":::

      - question: What if I fail identity validation?
        answer: | 
          If more documentation is required for identity validation, you're asked to provide those documents in the Azure portal. Otherwise, we recommend checking for an email that's sent to the listed address for email validation. However, if your organization fails identity validation, we can't onboard you to Trusted Signing. In that scenario, we recommend that you delete your Trusted Signing account so you don't get billed for unused resources.
      - question: What is the cost of using Trusted Signing?
        answer: | 
          For public preview, Trusted Signing is free for now. You'll still be prompted to select a Basic SKU or Premium SKU when you create your account.
      - question: What are my support options when I'm onboarding to Trusted Signing?
        answer: | 
          You can create a support ticket with the service in the Azure portal and be assisted by Azure customer support. Otherwise, we recommend that you go to Microsoft Q&A or StackOverflow under the tag `Trusted-Signing` to ask questions.  
  - name: Certificate profiles and identity validation
    questions:
      - question: What if my Trusted Signing subject name is different than my old cert and my MSIX's package name is now different? 
        answer: |
          Follow the persistent identity guidance in the [MSIX Persistent Identity](https://learn.microsoft.com/windows/msix/package/persistent-identity) article.
      - question: Does deleting the certificate profile revoke the certificates? 
        answer: |
          No. If you delete a certificate profile, any certificates that were previously issued or used under that profile will remain valid. The certificates won't be revoked.
      - question: Can I use a custom CN with Trusted Signing? 
        answer: |
          Per the CA/B Forum baseline requirements for publicly trusted code signing certificates, CN values must be the legal entity's validated name (for example, Microsoft Corporation) so there isn't much flexibility in CN values. However, an `O` value allows for verified legal names, trade names, and DBAs (*doing business as*). For individuals, there are already requirements for verification of individuals in the baseline requirements that we meet.
      - question: What do I do if the new identity validation button on the Azure portal is greyed out?
        answer: |
          This means you do not have the Identity Verifier role assigned to your account. Follow the [Assigning roles in Trusted Signing](https://learn.microsoft.com/azure/trusted-signing/tutorial-assign-roles) documentation to assign yourself the appropriate role. 
  - name: Signing
    questions:
      - question: What is Trusted Signing's HSM compliance level?
        answer: |
          FIPS 140-2 Level 3 (mHSMs).
      - question: How do I include the appropriate EKU for our certificates in the ELAM driver resources? 
        answer: |
          - For information about ELAM driver configuration for Protected Anti-Malware Services, see the following guidance: "Beginning in 2022, all user mode anti-malware service binaries must be signed by Microsoft's Trusted Signing signing service. The Trusted Signing issued Authenticode certificate for signing anti-malware binaries is updated every 30 days for security. To prevent the need to update the ELAM driver every time the certificate is updated, we recommend that anti-malware vendors include the Trusted Signing PCA certificate TBS hash in the CertHash portion of the ELAM driver resource file info. Additionally, the anti-malware vendor must include their unique Trusted Signing EKU identity in the EKU field of the resource file info. The EKU identity will begin with the prefix *1.3.6.1.4.1.311.97.*."
          - See [PKI Repository](https://www.microsoft.com/pkiops/docs/repository.htm) for the Microsoft ID Verified Code Signing PCA 2021 cert.
      - question: What happens if we run binaries signed with Trusted Signing on a machine that doesn't have the Trusted Signing update (especially binaries that are flagged for INTEGRITYCHECK)?
        answer: |
          - If an INTEGRITYCHECK flag is set, the user's signature isn't validated at runtime and isn't run with INTEGRITYCHECK.  
          - To check whether the Trusted Signing update is installed, we recommend that you check against one of your packaged /IntegrityCheck-linked DLLs. A dummy one works, too. This way, you can complete your check independently of the platform and the availability of our IntegrityCheck-linked binaries.
      - question: My Sectigo cert is expiring. Can I get a new one or do I have to use Trusted Signing?
        answer: |
          We're not extending any cross-signed certificates. You must sign by using the Trusted Signing service.
      - question: How is Trusted Signing different than the signing that customers do with Partner Center?
        answer: |
          Signing with the Partner Center is kernel-mode signing (no change with the introduction of Trusted Signing). Sign your user-mode binaries by using Trusted Signing. For your apps that interact with the Windows Security Center (WSC) service, you must include the Code Integrity bit (/INTEGRITYCHECK). Without the Trusted Signing signature, you can't register with the WSC, and Windows Defender will run in parallel.
      - question: How do we get the Authenticode certificate?  
        answer: |
          The Authenticode certificate that's used for signing with the profile is never given to you. All certificates are securely stored within the service and are accessible only at the time of signing. The public certificate is always included in any binary that the service signs. 
      - question: What are the common steps I should complete if I get a SignTool error (for example, unexpected internal error occurs)?  
        answer: |
          - Confirm that the dlib and DLL files are in the correct path.
          - Confirm that the version of SignTool that's installed and the dlib are both 64-bit.
          - Download and install [C++ Redistributables](https://docs.microsoft.com/cpp/windows/latest-supported-vc-redist?view=msvc-170).
          - Search for the specific issue on Bing or review the [SignTool overview](https://docs.microsoft.com/windows/win32/seccrypto/signtool).
          - We recommend that you use [this version of SignTool](https://developer.microsoft.com/windows/downloads/windows-sdk/) instead of getting it directly from NuGet. In an earlier article, we tested the SignTool version and confirmed that it works with our dlib (version 10.0.22621 currently is recommended). 
      - question: What if I get a 403 Forbidden or an admin approval to access this resource error? 
        answer: |
          This error is likely due to the Trusted Signing application not being allowed to run. Confirm that you have the Trusted Signing Certificate Profile Signer role: `({assignee} is your email)  az role assignment list --assignee {assignee}`.
      - question: How do I check if the time stamp service is healthy? 
        answer: |
          Run the following command: `curl http://timestamp.acs.microsoft.com`. If StatusCode 200 is returned, it means that the time stamp service is healthy and running. 
      - question: What if I get a 400 error that says `SharedTokenCacheCredential` authentication failed? 
        answer: |
          This error is caused by certificate caching. Add "ExcludeCredentials": ["SharedTokenCacheCredential"] to your JSON. To learn more, see [DefaultAzureCredential Class (Azure.Identity)](https://learn.microsoft.com/dotnet/api/azure.identity.defaultazurecredential?view=azure-dotnet)
      - question: I get errors when I do Private Trust signing. What should I do? 
        answer: |
          If you get an internal error, check that the CN name that you used matches the certificate name. The package name is checked. When you submit signing, be sure that you copy the entire subject name that appears in the Azure portal to paste in the manifest file. 
      - question: I'm getting "Command succeeded" for SignTool, but the file doesn't appear to be signed when I check the digital signature. What should I do? 
        answer: |
          If the signature doesn't appear in the digital signature property, run this command: `.\signtool.exe verify /v /debug /pa fileName`. Not all file types have the **Signature** tab in **Properties**.
      - question: How do I fix popup credentials in an Azure virtual machine when I run the SignTool + Dlib command?
        answer: |
          1. Create a [user-assigned managed identity](https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview). 
          2. Add the user-assigned managed identity to the virtual machine (VM): Select the VM. On the left menu, select **Identity**, and then select **User assigned**. On the menu bar, select the **Add** button to add the managed identity. 
          3. In the resource group (or subscription) that has the Trusted Signing Certificate Profile Signer role, add the user-assigned managed identity to the role. To assign the correct role, go to **Access control (IAM)** > **Role assignments**.
      - question: How do I fix pop-up credentials when I use Google Cloud Platform?
        answer: |
          - Because Google Cloud Platform (GCP) doesn't have an Azure managed identity resource by default, set up an [environment credential](https://docs.microsoft.com/dotnet/api/azure.identity.defaultazurecredential?view=azure-dotnet). Use the [EnvironmentCredential class](https://docs.microsoft.com/dotnet/api/azure.identity.environmentcredential?view=azure-dotnet) to set up the credential. We recommend that you use these variables:

             - **AZURE_TENANT_ID** for the Microsoft Entra tenant (directory) ID.
             - **AZURE_CLIENT_ID** for the client (application) ID of an app registration in the tenant. 
             - **AZURE_CLIENT_SECRET** for a client secret that was generated for the app registration. 
          - To create a client ID and secret, follow the guidance in [Create a service principal](https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal).
          - After you create the client ID and secret, go to the resource group (or subscription) that has the Trusted Signing Certificate Profile Signer role, and add this app to the role. 
      - question: What if my Trusted Signing account is suspended?
        answer: |
          If a certificate is misused or abused per the service's Terms of Use, Trusted Signing suspends the account or revokes a signing certificate or both. In this scenario, we engage with you directly and follow the guidelines in the Code Signing Baseline Requirements (CSBRs). 
      - question: How do I resolve an Azure.Identity.CredentialUnavailableException error?
        answer: |
          You might see this error in environments outside of Azure. We recommend that you include "exclude ManagedIdentity" if you're outside of Azure. For more information, see a [GitHub issue](https://github.com/Azure/azure-sdk-for-net/issues/29471). 
      - question: What if I change my subscription ID or tenant ID?
        answer: |
         Currently, Trusted Signing resources can't be migrated across subscriptions or tenants. If you want to make any change to your tenant ID or subscription ID, you must create all your Trusted Signing resources again.
  